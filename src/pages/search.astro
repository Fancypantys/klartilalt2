---
import "@pagefind/default-ui/css/ui.css";
import Main from "@/layouts/Main.astro";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import { SITE } from "@/config";

const BASE = import.meta.env.BASE_URL;
// If back button is disabled, fall back to the base (important for GH Pages)
const backUrl = SITE.showBackButton ? `${Astro.url.pathname}` : BASE;
---

<Layout title={`Search | ${SITE.title}`}>
  <Header />
  <Main pageTitle="Search" pageDesc="Search any article ...">
    <div id="pagefind-search" transition:persist data-backurl={backUrl}></div>
  </Main>
  <Footer />
</Layout>

<script>
// @ts-nocheck

  const BASE = import.meta.env.BASE_URL;

  function initSearch() {
    const pageFindSearch = document.querySelector("#pagefind-search");
    if (!pageFindSearch) return;

    const params = new URLSearchParams(window.location.search);
    const onIdle = window.requestIdleCallback || ((cb) => setTimeout(cb, 1));

    onIdle(async () => {
      // Pagefind UI ships no TS types; Vite will rewrite this bare import.
      const { PagefindUI } = await import("@pagefind/default-ui");

      if (import.meta.env.DEV) {
        pageFindSearch.innerHTML = `
          <div class="bg-muted/75 rounded p-4 space-y-4 mb-4">
            <p><strong>DEV mode:</strong> Build once to see search results locally.</p>
            <code class="block bg-black text-white px-2 py-1 rounded">pnpm run build</code>
          </div>
        `;
      }

      const search = new PagefindUI({
        element: "#pagefind-search",
        showSubResults: true,
        showImages: false,

        // Where Pagefind loads its JS bundle + index from (GH Pages aware)
        bundlePath: `${BASE}pagefind/`,

        // baseUrl: BASE, // usually not needed
        processTerm(term) {
          params.set("q", term);
          history.replaceState(history.state, "", "?" + params.toString());

          // Read custom data-* attribute safely
          const ds = pageFindSearch.dataset || {};
          const backUrl = ds["backurl"] || "";
          sessionStorage.setItem("backUrl", backUrl + "?" + params.toString());

          return term;
        },
      });

      // Kick off a search if ?q=foo is present
      const query = params.get("q");
      if (query) search.triggerSearch(query);

      const searchInput = document.querySelector(".pagefind-ui__search-input");
      const clearButton = document.querySelector(".pagefind-ui__search-clear");

      function resetSearchParam(e) {
        const t = e && e.target && typeof e.target.value === "string" ? e.target : null;
        const val = t ? t.value : "";
        if (val.trim() === "") {
          history.replaceState(history.state, "", window.location.pathname);
        }
      }

      searchInput?.addEventListener("input", resetSearchParam);
      clearButton?.addEventListener("click", resetSearchParam);
    });
  }

  // Re-init after client-side navigations
  document.addEventListener("astro:after-swap", () => {
    const container = document.querySelector("#pagefind-search");
    if (container && container.querySelector("form")) return; // already mounted
    initSearch();
  });

  initSearch();
</script>

<style is:global>
  #pagefind-search {
    --pagefind-ui-font: var(--font-mono);
    --pagefind-ui-text: var(--foreground);
    --pagefind-ui-background: var(--background);
    --pagefind-ui-border: var(--border);
    --pagefind-ui-primary: var(--accent);
    --pagefind-ui-tag: var(--background);
    --pagefind-ui-border-radius: 0.375rem;
    --pagefind-ui-border-width: 1px;
    --pagefind-ui-image-border-radius: 8px;
    --pagefind-ui-image-box-ratio: 3 / 2;

    form::before { background-color: var(--foreground); }

    input { font-weight: 400; border: 1px solid var(--border); }
    input:focus-visible { outline: 1px solid var(--accent); }

    .pagefind-ui__result-title a {
      color: var(--accent);
      outline-offset: 1px;
      outline-color: var(--accent);
    }

    .pagefind-ui__result-title a:focus-visible,
    .pagefind-ui__search-clear:focus-visible {
      text-decoration-line: none;
      outline-width: 2px;
      outline-style: dashed;
    }

    .pagefind-ui__result:last-of-type { border-bottom: 0; }
    .pagefind-ui__result-nested .pagefind-ui__result-link:before {
      font-family: system-ui;
    }
  }
</style>
