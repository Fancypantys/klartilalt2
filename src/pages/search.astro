<script is:inline>
(() => {
  // Base path ("/" locally, "/klartilalt2/" on GitHub Pages)
  const BASE = import.meta.env.BASE_URL;

  async function init() {
    const host = document.querySelector('#pagefind-search');
    if (!host) return;

    // Lazy-load Pagefind UI
    const { PagefindUI } = await import('@pagefind/default-ui');

    const params = new URLSearchParams(location.search);

    new PagefindUI({
      element: '#pagefind-search',
      showSubResults: true,
      showImages: false,

      // Tell Pagefind where to find its bundle + index (works with GH Pages base)
      bundlePath: BASE + 'pagefind/',

      // Keep ?q=... in the URL and store a backUrl for your back button UX
      processTerm(term) {
        params.set('q', term);
        history.replaceState(history.state, '', '?' + params.toString());

        const ds = host.dataset || {};
        const backUrl = ds.backurl || '';
        sessionStorage.setItem('backUrl', backUrl ? backUrl + '?' + params.toString() : '');

        return term;
      },
    });

    // Trigger an initial search if ?q=... is present
    const q = params.get('q');
    if (q) {
      // Slight delay ensures UI is mounted before triggering
      requestAnimationFrame(() => {
        const ev = new Event('input', { bubbles: true });
        const input = document.querySelector('.pagefind-ui__search-input');
        if (input) {
          input.value = q;
          input.dispatchEvent(ev);
        }
      });
    }

    // Keep the URL clean when the input is cleared
    const inputEl = document.querySelector('.pagefind-ui__search-input');
    const clearBtn = document.querySelector('.pagefind-ui__search-clear');

    const reset = (e) => {
      const t = e && e.target && typeof e.target.value === 'string' ? e.target : null;
      const val = t ? t.value : '';
      if (val.trim() === '') {
        history.replaceState(history.state, '', window.location.pathname);
      }
    };

    inputEl && inputEl.addEventListener('input', reset);
    clearBtn && clearBtn.addEventListener('click', reset);
  }

  // Re-init after client-side navigations
  document.addEventListener('astro:after-swap', () => {
    const container = document.querySelector('#pagefind-search');
    if (container && container.querySelector('form')) return; // already mounted
    init();
  });

  // First paint
  init();
})();
</script>
